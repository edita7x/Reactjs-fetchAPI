{"ast":null,"code":"import _classCallCheck from \"D:\\\\ReactDev\\\\fetchapi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\ReactDev\\\\fetchapi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\ReactDev\\\\fetchapi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\ReactDev\\\\fetchapi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\ReactDev\\\\fetchapi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\ReactDev\\\\fetchapi\\\\src\\\\Turkey.js\";\nimport React, { Component } from \"react\";\n\nvar Turkey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Turkey, _Component);\n\n  function Turkey(props) {\n    var _this;\n\n    _classCallCheck(this, Turkey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Turkey).call(this, props));\n    _this.state = {\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(Turkey, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://randomuser.me/api/?results=10&nat=tr\").then(function (res) {\n        return res.json();\n      }).then(function (parsedJSON) {\n        return parsedJSON.results.map(function (data) {\n          return {\n            id: \"\".concat(data.id.name),\n            firstName: \"\".concat(data.name.first),\n            lastName: \"\".concat(data.name.last),\n            location: \"\".concat(data.location.state, \", \").concat(data.nat),\n            thumbnail: \"\".concat(data.picture.large)\n          };\n        });\n      }).then(function (items) {\n        return _this2.setState({\n          items: items,\n          isLoaded: false\n        });\n      }).catch(function (error) {\n        return console.log('parsing failed', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var items = this.state.items;\n      return React.createElement(\"div\", {\n        className: \"boxWhite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Random User\"), items.length > 0 ? items.map(function (item) {\n        var id = item.id,\n            firstName = item.firstName,\n            lastName = item.lastName,\n            location = item.location,\n            thumbnail = item.thumbnail;\n        return React.createElement(\"div\", {\n          key: id,\n          className: \"bgCircle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: thumbnail,\n          alt: firstName,\n          className: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), \" \"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"ctr\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, firstName, \" \", lastName, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), location));\n      }) : null);\n    }\n  }]);\n\n  return Turkey;\n}(Component);\n\nexport default Turkey;","map":{"version":3,"sources":["D:\\ReactDev\\fetchapi\\src\\Turkey.js"],"names":["React","Component","Turkey","props","state","items","fetch","then","res","json","parsedJSON","results","map","data","id","name","firstName","first","lastName","last","location","nat","thumbnail","picture","large","setState","isLoaded","catch","error","console","log","length","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAAA;;AAChBC,MAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAG,UAAU;AAAA,eAAIA,UAAU,CAACC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,iBAC7C;AACEC,YAAAA,EAAE,YAAKD,IAAI,CAACC,EAAL,CAAQC,IAAb,CADJ;AAEEC,YAAAA,SAAS,YAAKH,IAAI,CAACE,IAAL,CAAUE,KAAf,CAFX;AAGEC,YAAAA,QAAQ,YAAKL,IAAI,CAACE,IAAL,CAAUI,IAAf,CAHV;AAIEC,YAAAA,QAAQ,YAAKP,IAAI,CAACO,QAAL,CAAchB,KAAnB,eAA6BS,IAAI,CAACQ,GAAlC,CAJV;AAKEC,YAAAA,SAAS,YAAKT,IAAI,CAACU,OAAL,CAAaC,KAAlB;AALX,WAD6C;AAAA,SAA3B,CAAJ;AAAA,OAFlB,EAYGjB,IAZH,CAYQ,UAAAF,KAAK;AAAA,eAAI,MAAI,CAACoB,QAAL,CAAc;AAC3BpB,UAAAA,KAAK,EAALA,KAD2B;AAE3BqB,UAAAA,QAAQ,EAAE;AAFiB,SAAd,CAAJ;AAAA,OAZb,EAgBGC,KAhBH,CAgBS,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,CAAJ;AAAA,OAhBd;AAiBD;;;6BAEQ;AAAA,UACAvB,KADA,GACU,KAAKD,KADf,CACAC,KADA;AAEL,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGIA,KAAK,CAAC0B,MAAN,GAAe,CAAf,GAAmB1B,KAAK,CAACO,GAAN,CAAU,UAAAoB,IAAI,EAAI;AAAA,YAC9BlB,EAD8B,GACkBkB,IADlB,CAC9BlB,EAD8B;AAAA,YAC1BE,SAD0B,GACkBgB,IADlB,CAC1BhB,SAD0B;AAAA,YACfE,QADe,GACkBc,IADlB,CACfd,QADe;AAAA,YACLE,QADK,GACkBY,IADlB,CACLZ,QADK;AAAA,YACKE,SADL,GACkBU,IADlB,CACKV,SADL;AAEpC,eAEA;AAAK,UAAA,GAAG,EAAER,EAAV;AAAc,UAAA,SAAS,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAK,UAAA,GAAG,EAAEQ,SAAV;AAAqB,UAAA,GAAG,EAAEN,SAA1B;AAAqC,UAAA,SAAS,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR,MADA,EAC2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD3E,EAEA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIA,SADJ,OACgBE,QADhB,EACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADzB,EAEIE,QAFJ,CAFA,CAFA;AAWF,OAboB,CAAnB,GAaG,IAhBP,CADF;AAsBH;;;;EArDcnB,S;;AAwDnB,eAAeC,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Turkey extends Component {\r\n \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        items: []\r\n      };\r\n    }\r\n   \r\n    componentDidMount() {\r\n        fetch(\"https://randomuser.me/api/?results=10&nat=tr\")\r\n          .then(res => res.json())\r\n          .then(parsedJSON => parsedJSON.results.map(data => (\r\n            {\r\n              id: `${data.id.name}`,\r\n              firstName: `${data.name.first}`,\r\n              lastName: `${data.name.last}`,\r\n              location: `${data.location.state}, ${data.nat}`,\r\n              thumbnail: `${data.picture.large}`,\r\n   \r\n            }\r\n          )))\r\n          .then(items => this.setState({\r\n            items,\r\n            isLoaded: false\r\n          }))\r\n          .catch(error => console.log('parsing failed', error))\r\n      }\r\n   \r\n      render() {\r\n        const {items } = this.state;\r\n          return (\r\n            <div className=\"boxWhite\">\r\n              <h2>Random User</h2>\r\n              {\r\n                items.length > 0 ? items.map(item => {\r\n                const {id, firstName, lastName, location, thumbnail} = item;\r\n                 return (\r\n   \r\n                 <div key={id} className=\"bgCircle\">\r\n                 <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                 <div className=\"ctr\">\r\n                    {firstName} {lastName}<br />\r\n                    {location}\r\n                  </div>\r\n   \r\n                </div>\r\n                );\r\n              }) : null\r\n            }\r\n            </div>\r\n          );\r\n   \r\n      }\r\n    }\r\n   \r\n  export default Turkey;"]},"metadata":{},"sourceType":"module"}